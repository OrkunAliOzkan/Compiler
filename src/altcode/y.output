State 15 conflicts: 1 shift/reduce


Grammar

    0 $accept: line $end

    1 line: stmt '\n'

    2 expr: IDENT '>' NUMBER

    3 stmt: IF '(' expr ')' stmt
    4     | IF '(' expr ')' stmt ELSE stmt
    5     | RETURN NUMBER ';'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 3 4
')' (41) 3 4
';' (59) 5
'>' (62) 2
error (256)
IF (258) 3 4
RETURN (259) 5
ELSE (260) 4
IDENT (261) 2
NUMBER (262) 2 5


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
line (14)
    on left: 1, on right: 0
expr (15)
    on left: 2, on right: 3 4
stmt (16)
    on left: 3 4 5, on right: 1 3 4


State 0

    0 $accept: . line $end

    IF      shift, and go to state 1
    RETURN  shift, and go to state 2

    line  go to state 3
    stmt  go to state 4


State 1

    3 stmt: IF . '(' expr ')' stmt
    4     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 5


State 2

    5 stmt: RETURN . NUMBER ';'

    NUMBER  shift, and go to state 6


State 3

    0 $accept: line . $end

    $end  shift, and go to state 7


State 4

    1 line: stmt . '\n'

    '\n'  shift, and go to state 8


State 5

    3 stmt: IF '(' . expr ')' stmt
    4     | IF '(' . expr ')' stmt ELSE stmt

    IDENT  shift, and go to state 9

    expr  go to state 10


State 6

    5 stmt: RETURN NUMBER . ';'

    ';'  shift, and go to state 11


State 7

    0 $accept: line $end .

    $default  accept


State 8

    1 line: stmt '\n' .

    $default  reduce using rule 1 (line)


State 9

    2 expr: IDENT . '>' NUMBER

    '>'  shift, and go to state 12


State 10

    3 stmt: IF '(' expr . ')' stmt
    4     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 13


State 11

    5 stmt: RETURN NUMBER ';' .

    $default  reduce using rule 5 (stmt)


State 12

    2 expr: IDENT '>' . NUMBER

    NUMBER  shift, and go to state 14


State 13

    3 stmt: IF '(' expr ')' . stmt
    4     | IF '(' expr ')' . stmt ELSE stmt

    IF      shift, and go to state 1
    RETURN  shift, and go to state 2

    stmt  go to state 15


State 14

    2 expr: IDENT '>' NUMBER .

    $default  reduce using rule 2 (expr)


State 15

    3 stmt: IF '(' expr ')' stmt .
    4     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 16

    ELSE      [reduce using rule 3 (stmt)]
    $default  reduce using rule 3 (stmt)


State 16

    4 stmt: IF '(' expr ')' stmt ELSE . stmt

    IF      shift, and go to state 1
    RETURN  shift, and go to state 2

    stmt  go to state 17


State 17

    4 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 4 (stmt)
